<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	servlet-context.xml은 DispatcherServlet의 작업을 위한 설정이다!
 -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 
		View 페이지 탐지 도구 등록 (View Resolver)
		- 접두사(prefix)와 접미사(suffix)를 설정하여 효율적인 경로 설정이 가능하도록 처리 
		- org.springframework.web.servlet.view.InternalResourceView
	-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- 
		자동 스캔 설정
		- 내가 정한 패키지를 기준으로 하여 등록 가능한 요소들을 탐지하여 등록하도록 설정
		- 탐지하는 패키지는 top-level package로 설정하는 것이 일반적이다
		- 스프링에서는 경로 관련된 처리는 spring-context 모듈이 수행
		
		- mvc:annotation-driven 설정을 하면 특정 annotation들이 활성화됨
		
		이 설정파일(servlet-context.xml)에서는 Controller만 스캔하도록 설정
	 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
	<!-- 복사한 뒤 반드시 고쳐야 하는 부분 -->
	<context:component-scan base-package="com.kh.home" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	<!-- 복사한 뒤 반드시 고쳐야 하는 부분 -->
	
	<!-- 
		정적 자원(static resource) 위치 지정
		- DispatcherServlet을 거치면 안되는 요소들에 대한 설정을 수행
		- css, js, 이미지, font, ...
		- 프로그래밍 처리가 필요하지 않은 요소들
		- mvc 모듈 설정으로 처리
		- 일반적으로 webapp 안의 resources 에 모든 요소를 저장
	 -->
	<mvc:resources location="/resources/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/resources/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/resources/font/" mapping="/font/**"></mvc:resources>
	<mvc:resources location="/resources/image/" mapping="/image/**"></mvc:resources>
	
	<!-- 
		인터셉터 설정
		- mapping으로 주소 추가
		- exclude-mapping으로 주소 제거
		- ** 와 * 를 사용할 수 있으며, 필터와 다르게 중간에 *를 사용하는것이 허용됨
		- **는 하위 모든 경로를 포함하는 수식
		- *는 현재 경로를 포함하는 수식
		- 반드시 mapping -> exclude-mapping -> bean 순서로 작성해야함
	 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path = "/exam/**"/>
			<mvc:mapping path = "/score/**"/>
			<mvc:mapping path = "/product/**"/>
			<mvc:mapping path = "/member/**"/>
			<mvc:mapping path = "/board/**"/>
			
			<mvc:exclude-mapping path="/member/login"/>
			<mvc:exclude-mapping path="/member/join*"/>
			<mvc:exclude-mapping path="/board/list"/>
			<mvc:exclude-mapping path="/board/detail/**"/>
			
			<bean class = "com.kh.home.interceptor.MemberLoginInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/member/join*"/>
			<mvc:mapping path="/member/login"/>
			
			<bean class = "com.kh.home.interceptor.NonMemberInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>